# Justfile for rh-vcl WASM builds

# Default recipe - show available commands
default:
    @just --list

# Check if wasm-pack is installed
check-wasm-pack:
    #!/usr/bin/env bash
    if ! command -v wasm-pack >/dev/null 2>&1; then
        echo "wasm-pack not found. Installing..."
        curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
    fi

# Build all WASM targets
wasm: wasm-web wasm-node wasm-bundler

# Build for web browsers (ES6 modules)
wasm-web: check-wasm-pack
    #!/usr/bin/env bash
    echo "Building WASM for web target..."
    mkdir -p pkg/web
    if command -v rustup >/dev/null 2>&1; then
        PATH="$HOME/.rustup/toolchains/stable-aarch64-apple-darwin/bin:$PATH" \
            wasm-pack build --target web --out-dir pkg/web
    else
        wasm-pack build --target web --out-dir pkg/web
    fi
    echo "✅ Web WASM build complete! Output in pkg/web/"

# Build for Node.js (CommonJS)
wasm-node: check-wasm-pack
    #!/usr/bin/env bash
    echo "Building WASM for Node.js target..."
    mkdir -p pkg/node
    if command -v rustup >/dev/null 2>&1; then
        PATH="$HOME/.rustup/toolchains/stable-aarch64-apple-darwin/bin:$PATH" \
            wasm-pack build --target nodejs --out-dir pkg/node
    else
        wasm-pack build --target nodejs --out-dir pkg/node
    fi
    echo "✅ Node.js WASM build complete! Output in pkg/node/"

# Build for bundlers (webpack, rollup, etc.)
wasm-bundler: check-wasm-pack
    #!/usr/bin/env bash
    echo "Building WASM for bundler target..."
    mkdir -p pkg/bundler
    if command -v rustup >/dev/null 2>&1; then
        PATH="$HOME/.rustup/toolchains/stable-aarch64-apple-darwin/bin:$PATH" \
            wasm-pack build --target bundler --out-dir pkg/bundler
    else
        wasm-pack build --target bundler --out-dir pkg/bundler
    fi
    echo "✅ Bundler WASM build complete! Output in pkg/bundler/"

# Clean WASM build artifacts
clean-wasm:
    @echo "Cleaning WASM build artifacts..."
    @rm -rf pkg/
    @echo "✅ WASM artifacts cleaned"

# Test WASM builds
test-wasm: wasm-node
    #!/usr/bin/env bash
    echo "Testing Node.js WASM build..."
    cd pkg/node && node -e "const {get_version,parse_vcl_simple}=require('./rh_vcl.js'); console.log('Version:',get_version()); console.log('Parse test:',parse_vcl_simple('123456').success ? 'PASS' : 'FAIL');"
    echo "✅ WASM test complete!"

# Development: build web target and start local server for testing
dev-web: wasm-web
    #!/usr/bin/env bash
    echo "Starting development server on http://localhost:8000"
    echo "Open http://localhost:8000/pkg/web/ to see generated files"
    cd pkg/web && python3 -m http.server 8000